// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=L0, b=L1, c=L2, d=L3, e=L4, f=L5, g=L6, h=L7);

    RAM8(in=in, load=L0, address=address[3..5], out=O0);
    RAM8(in=in, load=L1, address=address[3..5], out=O1);
    RAM8(in=in, load=L2, address=address[3..5], out=O2);
    RAM8(in=in, load=L3, address=address[3..5], out=O3);
    RAM8(in=in, load=L4, address=address[3..5], out=O4);
    RAM8(in=in, load=L5, address=address[3..5], out=O5);
    RAM8(in=in, load=L6, address=address[3..5], out=O6);
    RAM8(in=in, load=L7, address=address[3..5], out=O7);

    Mux8Way16(a=O0, b=O1, c=O2, d=O3, e=O4, f=O5, g=O6, h=O7, sel=address[0..2], out=out);
}
