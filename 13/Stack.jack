class Stack {
    field Node head;

    constructor Stack new() {
        let head = null;
        return this;
    }

    method void dispose() {
        var Position item;
        let item = pop();
        while (~(item = null)) {
            let item = pop();
        }
        do Memory.deAlloc(this);
        return;
    }

    method Stack append(Position item) {
        var Node node;
        let node = Node.new(item, head);
        let head = node;
        return this;
    }

    method Position pop() {
        var Position item;
        var Node node;
        if (head = null) {
            return null;
        }

        let node = head;
        let item = node.getItem();
        let head = node.nextNode();
        do node.dispose();
        return item;
    }
}
