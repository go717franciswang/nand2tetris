// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {
    field int length, maxLen;
    field Array chars;

    /** Constructs a new empty String with a maximum length of maxLength. */
    constructor String new(int maxLength) {
        let length = 0;
        let maxLen = maxLength;
        if (maxLen = 0) {
            return this;
        }
        let chars = Array.new(maxLength);
        return this;
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
        if (maxLen > 0) {
            do chars.dispose();
        }
        return;
    }

    /** Returns the current length of this String. */
    method int length() {
        return length;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
        return chars[j];
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
        let chars[j] = c;
        return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
        let chars[length] = c;
        let length = length + 1;
        return this;
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
        let length = length - 1;
        return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
        var int i, rs;
        var boolean negative;
        let i = 0;
        let rs = 0;

        let negative = false;
        if (chars[0] = 45) {
            let negative = true;
            let i = 1;
        }
        while ((i < length) & (chars[i] > 47) & (chars[i] < 58)) {
            let rs = rs * 10 + (chars[i] - 48);
            let i = i + 1;
        }

        if (negative) {
            let rs = (-rs);
        }
        return rs;
    }

    /** Sets this String to hold a representation of the given number. */
    method void setInt(int number) {
        var Array digits;
        var int len;
        var boolean negative;
        var int tmp;
        // using 5 since largest number can be 32768
        let digits = Array.new(5);
        let len = 0;
        let negative = number < 0;
        if (negative) {
            let number = (-number);
        }

        while (~(number = 0)) {
            let tmp = number / 10;
            let digits[len] = number - (tmp*10);
            let len = len + 1;
            let number = tmp;
        }

        let length = 0;
        if (negative) {
            do appendChar(45);
        }

        while (len > 0) {
            do appendChar(digits[len-1] + 48);
            let len = len - 1;
        }
        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
