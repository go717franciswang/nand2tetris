// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * Memory operations library.
 */ 
class Memory {
    static Array freeList;

    /** Initializes memory parameters. */
    function void init() {
        let freeList = 2048;            // begin of heap
        // let freeList[0] = 16383 - 2048; // length of heap
        // let freeList[1] = null;         // next freeList
        return;
    }

    /** Returns the value of the main memory at the given address. */
    function int peek(int address) {
        var Array memory;
        let memory = 0;
        return memory[address];
    }

    /** Sets the value of the main memory at this address
     *  to the given value. */
    function void poke(int address, int value) {
        var Array memory;
        let memory = 0;
        let memory[address] = value;
        return;
    }

    /** finds and allocates from the heap a memory block of the 
     *  specified size and returns a reference to its base address. */
    function int alloc(int size) {
        var int free;
        let free = freeList;
        let freeList = freeList + size;
        return free;
    }

    /** De-allocates the given object and frees its space. */
    function void deAlloc(int object) {
        return;
    }    
}
